{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/Validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/5.40160419.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/* \n    Validation function\n */\n\n // define identifiers.\n //\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\n// export identifier functions with specific/extra description and type\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/Validators';\nimport './Input.css';\n\n/* \n  New place input function and style\n */\n\n // action.type: get type of action currently.\n // ...state: get copy of old state.\n // handle two case: when user input text, when user touch the input field. \n // default: current state.\n // add validator: empty or not.\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true\n      }\n    default:\n      return state;\n  }\n};\n\n/* useReducer: An alternative to useState. accepts a reducer of type (state, action) => newState,\n                and returns the current state paired with a dispatch method; use in complex\n                state logic.\n                syntax: const [state, dispatch] = useReducer(reducer, initialArg, init);\n */               \nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n// static constants\nconst { id, onInput } = props;\nconst { value, isValid } = inputState;\n/*\n  useEffect: Effect hook lets you perform side effects in function component;\n              similar to componentDidMount and componentDidUpdate;\n              parameters with indicators.\n*/\nuseEffect(() => {\n  onInput(id, value, isValid)\n}, [id, value, isValid, onInput]);\n\n  // Two attributes for handler.\n  // event.target.value: get user input value.\n  const changeHandler = event => {\n    dispatch({ \n      type: 'CHANGE', \n      val: event.target.value, \n      validators: props.validators});\n  };\n\n  const touchHandler = event => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  }\n  // props.element: check if type is input, if yes, output input field, otherwise textarea.\n  // htmlFor: == for attributes.\n  // rows: specify rows or default 3 rows.\n  // Input change listener.\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n  // !inputState.isValid: check if input value valid, if not, output error text\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\n/* \n    custom form hooks re-use template\n    The Complete Guide\" course or in the official docs: https://reactjs.org/docs/hooks-intro.html\n    you can build your own React hooks (https://reactjs.org/docs/hooks-custom.html).\n */\n\n /*\n    input container\n    add validator: required.\n    check all form title with id, if current id is same, check validation; if not the samw, change into same id then check.\n */\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          // if input is undefined, continue can ingnore this step but go to next iteration\n          if (!state.inputs[inputId]) {\n            continue;\n          }\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value, isValid: action.isValid }\n          },\n          isValid: formIsValid\n        };\n        case 'SET_DATA':\n          return {\n            inputs: action.inputs,\n            isValid: action.formIsValid\n          }\n      default:\n        return state;\n    }\n  };\n\n// export re-use useForm hook and can be applied to update and new place.\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    /* useCallback: useCallback will return a memoized version of the callback that only changes \n                  if one of the dependencies has changed. This is useful when passing callbacks to \n                  optimized child components that rely on reference equality to prevent unnecessary renders \n                  (e.g. shouldComponentUpdate).\n        variables: input value, isValue, id.\n        make dynamic id content.\n    */\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n    \n    // none dependencies, not re-created function when call back.\n    const setFormData = useCallback((inputData, formValidity) => {\n      dispatch({\n        type: 'SET_DATA',\n        inputs: inputData,\n        formIsValid: formValidity\n      });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};","import React, { useRef, useState, useEffect} from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const filePickerRef = useRef();\n\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState();\n\n  useEffect(() => {\n    if (!file) {\n        return;\n    }\n    const fileReader = new FileReader(); // FileReader() is browser side javascript reader.\n    fileReader.onload = () => {\n        setPreviewUrl(fileReader.result);\n    }; // this function will execute when reader is done.\n    fileReader.readAsDataURL(file);\n\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid; // make sure valid status update quick\n    if (event.target.files && event.target.files.length === 1) {\n        pickedFile = event.target.files[0]; // select one and only one file\n        setFile(pickedFile);\n        setIsValid(true);\n        fileIsValid = true;\n    } else {\n        setIsValid(false);\n        fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n      </div>\n    {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from 'react'; //Context is designed to share data that can be considered “global” for a tree of React components\nimport { useHistory } from 'react-router-dom'; //The useHistory hook gives you access to the history instance that you may use to navigate.\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH} from '../../shared/util/Validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\n/* \n    New place info display area\n */\n\n// define title and description field empty, and default validation is false.\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload \n          id=\"image\" \n          onInput={inputHandler} \n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n  \nexport default NewPlace;\n  "],"sourceRoot":""}