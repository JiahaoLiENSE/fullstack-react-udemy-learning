{"version":3,"sources":["shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/Validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","title","description","inputHandler","setFormData","a","process","responseData","place","fetchPlace","placeUpdateSubmitHandler","preventDefault","JSON","stringify","Authorization","token","userId","Fragment","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/6.fd959e80.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\n/* \n  Card container style\n */\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/* \n    Validation function\n */\n\n // define identifiers.\n //\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\n// export identifier functions with specific/extra description and type\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/Validators';\nimport './Input.css';\n\n/* \n  New place input function and style\n */\n\n // action.type: get type of action currently.\n // ...state: get copy of old state.\n // handle two case: when user input text, when user touch the input field. \n // default: current state.\n // add validator: empty or not.\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true\n      }\n    default:\n      return state;\n  }\n};\n\n/* useReducer: An alternative to useState. accepts a reducer of type (state, action) => newState,\n                and returns the current state paired with a dispatch method; use in complex\n                state logic.\n                syntax: const [state, dispatch] = useReducer(reducer, initialArg, init);\n */               \nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n// static constants\nconst { id, onInput } = props;\nconst { value, isValid } = inputState;\n/*\n  useEffect: Effect hook lets you perform side effects in function component;\n              similar to componentDidMount and componentDidUpdate;\n              parameters with indicators.\n*/\nuseEffect(() => {\n  onInput(id, value, isValid)\n}, [id, value, isValid, onInput]);\n\n  // Two attributes for handler.\n  // event.target.value: get user input value.\n  const changeHandler = event => {\n    dispatch({ \n      type: 'CHANGE', \n      val: event.target.value, \n      validators: props.validators});\n  };\n\n  const touchHandler = event => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  }\n  // props.element: check if type is input, if yes, output input field, otherwise textarea.\n  // htmlFor: == for attributes.\n  // rows: specify rows or default 3 rows.\n  // Input change listener.\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n  // !inputState.isValid: check if input value valid, if not, output error text\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\n/* \n    custom form hooks re-use template\n    The Complete Guide\" course or in the official docs: https://reactjs.org/docs/hooks-intro.html\n    you can build your own React hooks (https://reactjs.org/docs/hooks-custom.html).\n */\n\n /*\n    input container\n    add validator: required.\n    check all form title with id, if current id is same, check validation; if not the samw, change into same id then check.\n */\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          // if input is undefined, continue can ingnore this step but go to next iteration\n          if (!state.inputs[inputId]) {\n            continue;\n          }\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value, isValid: action.isValid }\n          },\n          isValid: formIsValid\n        };\n        case 'SET_DATA':\n          return {\n            inputs: action.inputs,\n            isValid: action.formIsValid\n          }\n      default:\n        return state;\n    }\n  };\n\n// export re-use useForm hook and can be applied to update and new place.\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    /* useCallback: useCallback will return a memoized version of the callback that only changes \n                  if one of the dependencies has changed. This is useful when passing callbacks to \n                  optimized child components that rely on reference equality to prevent unnecessary renders \n                  (e.g. shouldComponentUpdate).\n        variables: input value, isValue, id.\n        make dynamic id content.\n    */\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n    \n    // none dependencies, not re-created function when call back.\n    const setFormData = useCallback((inputData, formValidity) => {\n      dispatch({\n        type: 'SET_DATA',\n        inputs: inputData,\n        formIsValid: formValidity\n      });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/Validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\n// fetching data locally\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\nuseEffect(() => {\n  const fetchPlace = async () => {\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n      );\n      setLoadedPlace(responseData.place);\n      setFormData(\n        {\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        },\n        true\n      );\n    } catch (err) {}\n  };\n  fetchPlace();\n}, [sendRequest, placeId, setFormData])\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n}\n  if (!loadedPlace && !error) {\n  return (\n    <div className=\"center\">\n      <Card>\n        <h2>Could not find place!</h2>\n      </Card>\n    </div>\n  );\n}\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n          initialValue={loadedPlace.title}\n          initialValid={true}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (min. 5 characters).\"\n          onInput={inputHandler}\n          initialValue={loadedPlace.description}\n          initialValid={true}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          UPDATE PLACE\n        </Button>\n      </form>}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;"],"sourceRoot":""}